import { useState, useEffect } from 'react';

const tg = window.Telegram.WebApp;

export default function UserView() {
  const [debts, setDebts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [showInfo, setShowInfo] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  
  const user = tg.initDataUnsafe?.user;

  useEffect(() => {
    tg.BackButton.show();
    tg.onEvent('backButtonClicked', () => tg.close());

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤—ã–π –ª–∏ —ç—Ç–æ –≤–∏–∑–∏—Ç
    const hasVisited = localStorage.getItem('hasVisited');
    if (!hasVisited) {
      setShowInfo(true); // –ï—Å–ª–∏ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ-–æ–∫–Ω–æ
    }

    const initializeUser = async () => {
      if (!user?.id) {
        setError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
        setLoading(false);
        return;
      }
      try {
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —é–∑–µ—Ä–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –∏–º—è
        const userName = `${user.first_name || ''} ${user.last_name || ''}`.trim();
        await fetch('/api/registerUser', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ userId: user.id, userName: userName }),
        });

        const response = await fetch(`/api/getDebts?userId=${user.id}`);
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
        const data = await response.json();
        setDebts(data.filter(d => d.status === 'UNPAID' && d.amount > 0));
      } catch (e) {
        setError(e.message);
      } finally {
        setLoading(false);
      }
    };
    initializeUser();
  }, [user?.id]);

  const handleCloseInfo = () => {
    setShowInfo(false);
    localStorage.setItem('hasVisited', 'true'); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–¥–µ—Å—å
  };

  if (loading) return <div className="loading-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  if (error) return <div className="app-container">–û—à–∏–±–∫–∞: {error}</div>;

  const totalAmount = debts.reduce((sum, debt) => sum + debt.amount, 0);

  return (
    <>
      <div className="user-header">
        <h1>–ú–æ–∏ –¥–æ–ª–≥–∏</h1>
        <button className="info-icon" onClick={() => setShowInfo(true)}>i</button>
      </div>

      {debts.length === 0 ? (
        <div className="no-debts-card">
          <div className="party-popper">üéâ</div>
          <h2>–î–æ–ª–≥–æ–≤ –Ω–µ—Ç!</h2>
          <p>–ú–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è –∏ –≤—ã–ø–∏—Ç—å —á–∞—é.</p>
        </div>
      ) : (
        <>
          <div className="total-debt-card">
            <span>–û–±—â–∞—è —Å—É–º–º–∞ –¥–æ–ª–≥–∞</span>
            <div className="total-amount">{totalAmount.toLocaleString('ru-RU')} ‚Ç∏</div>
          </div>
          <div className="debt-list">
            {debts.map((debt) => (
              <div key={debt.id} className="debt-card">
                <div className="debt-card-main">
                  <div className="debt-description">{debt.description}</div>
                  <div className="debt-amount-item">{debt.amount.toLocaleString('ru-RU')} ‚Ç∏</div>
                </div>
                <div className="debt-card-footer">
                  <span>{new Date(debt.issuedAt).toLocaleDateString('ru-RU')}</span>
                </div>
              </div>
            ))}
          </div>
        </>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {showInfo && (
        <div className="info-modal-backdrop">
          <div className="info-modal-content">
            <button className="close-btn" onClick={handleCloseInfo}>&times;</button>
            <h2>–ß—Ç–æ —ç—Ç–æ –∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?</h2>
            <p>–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É—á–µ—Ç–∞ –º–æ–∏—Ö –¥–æ–ª–≥–æ–≤. –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–≤–∏–¥–µ—Ç—å, —Å–∫–æ–ª—å–∫–æ –∏ –∑–∞ —á—Ç–æ —Ç—ã –º–Ω–µ –¥–æ–ª–∂–µ–Ω.</p>
            <h3>–ö–∞–∫ –ø–æ–≥–∞—Å–∏—Ç—å –¥–æ–ª–≥?</h3>
            <p>–¢—ã –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å –¥–æ–ª–≥ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º:</p>
            <ul className="payment-methods">
              <li><b>Kaspi:</b> [–¢–≤–æ–π –Ω–æ–º–µ—Ä Kaspi]</li>
              <li><b>Halyk:</b> [–¢–≤–æ–π –Ω–æ–º–µ—Ä Halyk]</li>
              <li><b>Freedom:</b> [–¢–≤–æ–π –Ω–æ–º–µ—Ä Freedom]</li>
              <li><b>–ù–∞–ª–∏—á–Ω—ã–º–∏:</b> –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ</li>
            </ul>
            <p>–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ç—ã –≤–µ—Ä–Ω–µ—à—å –¥–µ–Ω—å–≥–∏, —è –æ—Ç–º–µ—á—É –¥–æ–ª–≥ –∫–∞–∫ –ø–æ–≥–∞—à–µ–Ω–Ω—ã–π, –∏ –æ–Ω –∏—Å—á–µ–∑–Ω–µ—Ç –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞.</p>
            <button className="understand-btn" onClick={handleCloseInfo}>–ü–æ–Ω—è—Ç–Ω–æ</button>
          </div>
        </div>
      )}
    </>
  );
}